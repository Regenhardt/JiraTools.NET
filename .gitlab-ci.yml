stages:
  - build
  - publish
  - pages


build:
  stage: build
  image: dotnetimages/microsoft-dotnet-core-sdk-nodejs:7.0_19.x
  script:
    - dotnet restore
    - dotnet build
  artifacts:
    when: on_success
    expire_in: 1 week
    untracked: true

publish:
  stage: publish
  image: dotnetimages/microsoft-dotnet-core-sdk-nodejs:7.0_19.x
  script:
    - dotnet publish ./JiraTools.Web.Api/JiraTools.Web.Api.csproj -o out
  artifacts:
    when: on_success
    expire_in: 1 week
    paths:
      - ./out


docker:
  image: docker:latest
  stage: deploy
  rules:
      - if: $CI_COMMIT_BRANCH == "master"
  services:
      - docker:dind
  before_script:
      - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
      - docker build -t $CI_REGISTRY_IMAGE -f JiraTools.Web.Api/Dockerfile .
      - docker push $CI_REGISTRY_IMAGE


pages:
  stage: pages
  image: alpine:latest
  needs: [publish]
  script:
    - mkdir ./public
    - cp ./out/wwwroot/* ./public
  artifacts:
    when: on_success
    expire_in: 1 week
    paths: 
      - ./public
